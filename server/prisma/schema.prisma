// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  address   String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  Purchase   Purchase[]
  UserTokens UserTokens[]
}

model UserTokens {
  id     String @default(uuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  refreshToken String
  family       String   @unique
  browserInfo  String?
  expiresAt    DateTime
  createdAt    DateTime @default(now())
}

model Product {
  id                 String     @id @default(uuid())
  name               String     @unique
  picture            String[]
  basePrice          Decimal
  discountPercentage Int        @default(0)
  stock              Int        @default(0)
  description        String?
  createdAt          DateTime   @default(now())
  categories         Category[]
  Purchase           Purchase[]
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model Purchase {
  id String @id @default(uuid())

  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId String?

  product   Product @relation(fields: [productId], references: [id])
  productId String

  amount        Int      @default(1)
  totalPrice    Decimal
  reviewNote    Int?
  reviewComment String?
  createdAt     DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}
